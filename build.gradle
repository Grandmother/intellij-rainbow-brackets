buildscript {
    repositories {
        mavenLocal()
        gradlePluginPortal()
        maven { url "https://maven-central.storage-download.googleapis.com/repos/central/data/" }
        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "de.undercouch:gradle-download-task:4.0.2"
    }
}

plugins {
    id "org.jetbrains.intellij" version "0.4.18"
    id "com.adarshr.test-logger" version "2.0.0"
    id "de.undercouch.download" version "4.0.2"
    id "org.jetbrains.kotlin.jvm" version "1.3.71"
    id "jacoco"
    id "idea"
}

apply from: "$rootDir/verifier.gradle"

testlogger {
    theme 'mocha'
}

repositories {
    mavenLocal()
    maven { url "https://www.jetbrains.com/intellij-repository/releases" }
    maven { url "https://www.jetbrains.com/intellij-repository/snapshots" }
    maven { url "https://maven-central.storage-download.googleapis.com/repos/central/data/" }
    maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
    maven { url "https://repo.eclipse.org/content/groups/releases/" }
}

def pluginsDependencies = ['java',
                           'java-i18n',
                           'JavaScriptLanguage',
                           'DatabaseTools',
                           'CSS',
                           'Groovy',
                           'properties',
                           "org.jetbrains.kotlin:$kotlinVersion-release-IJ2020.1-1",
                           'org.intellij.scala:2020.1.25',
                           'Dart:201.6668.86',
                           'org.jetbrains.plugins.ruby:201.6668.60',
                           'com.jetbrains.php:201.6668.78',
                           'com.jetbrains.twig:201.6668.60',
]

intellij {
    pluginName name

    version ideaVersion
    //localPath = '/Users/izhangzhihao/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/201.6668.60/IntelliJ IDEA 2020.1 EAP.app/Contents'
    updateSinceUntilBuild = false

    sandboxDirectory project.rootDir.canonicalPath + "/.sandbox"
    setPlugins(*pluginsDependencies)
}

publishPlugin {
    def authenticationToken = "$System.env.token"
    token authenticationToken
    channels publishChannels
}

idea {
    project {
        jdkName = javaVersion
        languageLevel = javaVersion
    }
    module {
        excludeDirs += file(".sandbox")
    }
}

dependencies {
    implementation("org.eclipse.mylyn.github:org.eclipse.egit.github.core:5.5.0.201909110433-r") {
        exclude module: "gson"
    }
    testImplementation("io.kotlintest:kotlintest:2.0.7")
}

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

[compileKotlin, compileTestKotlin]*.kotlinOptions {
    languageVersion = kotlinLanguageVersion
    apiVersion = kotlinTargetVersion
    jvmTarget = javaVersion
    freeCompilerArgs = ["-Xskip-runtime-version-check"]
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }
}

check.dependsOn jacocoTestReport

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, exclude: [
                            '**/settings/**',
                            '**/util/**',
                    ])
                })
        )
    }
}


pluginVerifier {
    pluginFileName = "$rootProject.name-$version"
    ides = ["IU-201.6668-EAP-CANDIDATE-SNAPSHOT"]
    verifierVersion = "1.232"
}

check.dependsOn pluginVerifier